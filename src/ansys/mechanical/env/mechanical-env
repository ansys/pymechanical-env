#!/bin/bash

# Check if the script is running on a Linux system
if [ "$(uname)" != "Linux" ]; then
  echo "This script is intended for Linux environments only."
  exit 1
fi

# Check if at least one argument was provided
if [ $# -lt 1 ]; then
    echo "Usage: mechanical-env [-r REVISION] [COMMAND]"
    exit 1
fi

# Initialize variables
revision=""
command=""

# Process command line arguments
while [ "$#" -gt 0 ]; do
    case "$1" in
        -r|--revision)
            revision="$2"
            shift 2
            ;;
        *)
            command="$@"
            break
            ;;
    esac
done

# Check if a command was provided
if [ -z "$command" ]; then
    echo "Usage: mechanical-env [-r REVISION] [COMMAND]"
    exit 1
fi

# Determine the appropriate command to run find-mechanical
if [ -n "$revision" ]; then
    find_mechanical_command="find-mechanical -r $revision"
else
    find_mechanical_command="find-mechanical"
fi

# Run the find-mechanical command and capture its output
output=$($find_mechanical_command)

# Check if there was an error
if [ $? -ne 0 ]; then
    echo "Error running the find-mechanical."
    exit 1
fi

# Extract and print the captured values
read -r version DS_INSTALL_DIR <<< "$output"

# Set Workbench (Mechanical) installation directory
awp_root="AWP_ROOT${version}"
eval ${awp_root}=$DS_INSTALL_DIR/..
export $awp_root

# Set environment variables used by Workbench (Mechanical) code
awp_locale="AWP_LOCALE${version}"
eval ${awp_locale}=en-us
export $awp_locale
cadoe_libdir="CADOE_LIBDIR${version}"
eval ${cadoe_libdir}=${!awp_root}/commonfiles/language/${!awp_locale}
export $cadoe_libdir
ANSYSLIC_DIR=${!awp_root}/../shared_files/licensing
export ANSYSLIC_DIR
ANSYSCOMMON_DIR=${!awp_root}/commonfiles
export ANSYSCOMMON_DIR
ansyscl="ANSYSCL${version}_DIR"
eval ${ansyscl}=${!awp_root}/licensingclient
export $ansyscl

# Set MainWin variables
ANSISMAINWINLITEMODE=1
export ANSISMAINWINLITEMODE
MWCONFIG_NAME=amd64_linux
export MWCONFIG_NAME
MWDEBUG_LEVEL=0
export MWDEBUG_LEVEL
MWHOME=${!awp_root}/commonfiles/MainWin/linx64/mw
export MWHOME
MWOS=linux
export MWOS
MWREGISTRY=${DS_INSTALL_DIR}/WBMWRegistry/hklm_${MWCONFIG_NAME}.bin
export MWREGISTRY
MWRT_MODE=classic
export MWRT_MODE
MWRUNTIME=1
export MWRUNTIME
MWUSER_DIRECTORY="${HOME}/.mw"
export MWUSER_DIRECTORY
MWDONT_XCLOSEDISPLAY=1
export MWDONT_XCLOSEDISPLAY

# Set dynamic library preload
LD_PRELOAD=libstdc++.so.6.0.28
export LD_PRELOAD

# Set dynamic library load path
LD_LIBRARY_PATH=${!awp_root}/tp/stdc++\
:${!awp_root}/tp/openssl/1.1.1/linx64/lib\
:${MWHOME}/lib-amd64_linux\
:${MWHOME}/lib-amd64_linux_optimized\
:${LD_LIBRARY_PATH}\
:${!awp_root}/Tools/mono/Linux64/lib\
:${DS_INSTALL_DIR}/lib/linx64\
:${DS_INSTALL_DIR}/dll/linx64\
:${DS_INSTALL_DIR}/libshared/linx64\
:${!awp_root}/tp/IntelMKL/2020.0.166/linx64/lib/intel64\
:${!awp_root}/tp/qt_fw/5.9.6/Linux64/lib\
:${!awp_root}/commonfiles/CAD/Acis/linx64\
:${!awp_root}/commonfiles/fluids/lib/linx64\
:${!awp_root}/Framework/bin/Linux64

# Add extra path to the dynamic library load path if version is 241
if [ "$version" = "241"  ]; then
    # Updating for Revision 241
    LD_LIBRARY_PATH=${LD_LIBRARY_PATH}\
:${!awp_root}/tp/nss/3.89/lib\
:${!awp_root}/tp/IntelCompiler/2023.1.0/linx64/lib/intel64
else
    # For revision < 241 (mainly 232)
    LD_LIBRARY_PATH=${LD_LIBRARY_PATH}\
:${!awp_root}/tp/IntelCompiler/2019.3.199/linx64/lib/intel64
fi
export LD_LIBRARY_PATH

# Set system path
PATH=${MWHOME}/bin-amd64_linux_optimized\
:${DS_INSTALL_DIR}/CommonFiles/linx64\
:${DS_INSTALL_DIR}/CADIntegration/linx64\
:${!awp_root}/Tools/mono/Linux64/bin\
:${PATH}
export PATH

# Evaluate the command and get the return code of the process
eval $@
returnCode=$?
exit $returnCode

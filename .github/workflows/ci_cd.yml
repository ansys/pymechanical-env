name: GitHub CI

# run only on main branch.  This avoids duplicated actions on PRs
on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
      #- release/*
env:
  MAIN_PYTHON_VERSION: '3.10'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys code style checks
        uses: ansys/actions/code-style@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          use-python-cache: false

  doc-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys documentation style checks
        uses: ansys/actions/doc-style@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build package
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
      - name: Install build requirements
        run: |
          pip install -U pip
          pip install build
      - name: Build
        run: python -m build
      - name: Install
        run: pip install dist/*.whl
      - name: Test import
        run: |
          mkdir tmp
          cd tmp
          python -c "import ansys.mechanical.env; print('Successfully imported ansys.mechanical.env')"
          python -c "from ansys.mechanical.env import __version__; print(__version__)"
      - name: Upload packages
        uses: actions/upload-artifact@v2
        with:
          name: ansys-mechanical-env-package
          path: dist/
          retention-days: 7

  # Release:
  #   if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
  #   needs: [build]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Set up Python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ env.MAIN_PYTHON_VERSION }}

  #     - uses: actions/download-artifact@v2

  #     - name: Display structure of downloaded files
  #       run: ls -R

  #     - name: Upload to Public PyPi
  #       run: |
  #         pip install twine
  #         twine upload --skip-existing ./**/*.whl
  #         twine upload --skip-existing ./**/*.tar.gz
  #       env:
  #         TWINE_USERNAME: __token__
  #         TWINE_PASSWORD: ${{ secrets.ANSYS_API_MECHANICAL_PYPI_TOKEN }}

  #     - name: Release
  #       uses: softprops/action-gh-release@v1
  #       with:
  #         generate_release_notes: true
  #         files: |
  #           ./**/*.whl
  #           ./**/*.tar.gz
  #           ./**/*.pdf
name: GitHub CI

on:
  pull_request:
  push:
    tags:
      - "*"
    branches:
      - main
      - release/*

env:
  MAIN_PYTHON_VERSION: '3.10'
  PACKAGE_NAME: 'ansys-mechanical-env'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:

  style:
    name: Code style
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys code style checks
        uses: ansys/actions/code-style@v4
        with:
          python-version: ${{ env.MAIN_PYTHON_VERSION }}
          use-python-cache: false

  doc-style:
    name: Documentation Style Check
    runs-on: ubuntu-latest
    steps:
      - name: PyAnsys documentation style checks
        uses: ansys/actions/doc-style@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  smoke-tests:
    name: Build and Smoke tests
    runs-on: ${{ matrix.os }}
    needs: [style]
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        should-release:
          - ${{ github.event_name == 'push' && contains(github.ref, 'refs/tags') }}
    steps:
      - name: Build wheelhouse and perform smoke test
        uses: ansys/actions/build-wheelhouse@v4
        with:
          library-name: ${{ env.PACKAGE_NAME }}
          operating-system: ${{ matrix.os }}
          python-version: ${{ matrix.python-version }}

  test_232:
    name: Tests(232)
    runs-on: ubuntu-latest
    needs: [style, doc-style]
    container:
      image: ghcr.io/ansys/mechanical:23.2.0
      options: --entrypoint /bin/bash
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4
      - name: Set up python and pip
        run: |
          apt update
          apt install software-properties-common -y
          add-apt-repository ppa:deadsnakes/ppa -y
          apt install python${{ matrix.python-version }} -y
          ln -s /usr/bin/python${{ matrix.python-version }} /usr/bin/python
          apt install python${{ matrix.python-version }}-venv -y

      - name: Install pip for >3.8
        run: |
          python -m ensurepip --default-pip

      - name: Upgrade pip and install packages for testing
        run: |
          pip3 install --upgrade pip
          pip3 install -r requirements/requirements_tests.txt

      - name: Pytests and coverage
        run: |
          pip3 install .
          pytest -v --cov=ansys.mechanical.env

  test_241:
    name: Tests(241)
    runs-on: ubuntu-latest
    needs: [style, doc-style]
    container:
      image: ghcr.io/ansys/mechanical:24.1.0
      options: --entrypoint /bin/bash
    strategy:
      max-parallel: 2
      fail-fast: false
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
      - uses: actions/checkout@v4
      - name: Set up python and pip
        run: |
          apt update
          apt install software-properties-common -y
          add-apt-repository ppa:deadsnakes/ppa -y
          apt install python${{ matrix.python-version }} -y
          ln -s /usr/bin/python${{ matrix.python-version }} /usr/bin/python
          apt install python${{ matrix.python-version }}-venv -y

      - name: Install pip for >3.8
        run: |
          python -m ensurepip --default-pip

      - name: Upgrade pip and install packages for testing
        run: |
          pip3 install --upgrade pip
          pip3 install -r requirements/requirements_tests.txt

      - name: Pytests and coverage
        run: |
          pip3 install .
          pytest -v --cov=ansys.mechanical.env

  package:
    name: Build package
    needs: [test_232, test_241]
    runs-on: ubuntu-latest
    steps:
      - name: Build library source and wheel artifacts
        uses: ansys/actions/build-library@v4
        with:
          library-name: ${{ env.PACKAGE_NAME }}
          python-version: ${{ env.MAIN_PYTHON_VERSION }}

  doc-build:
    name: Documentation building
    needs: [style, doc-style]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - run: mkdir -p doc/_build/

      - run: touch doc/_build/doc.txt

      - name: Upload HTML Documentation
        uses: actions/upload-artifact@v3
        with:
          name: documentation-html
          path: doc/_build/doc.txt
          retention-days: 7

      - name: Upload PDF Documentation
        uses: actions/upload-artifact@v3
        with:
          name: documentation-pdf
          path: doc/_build/doc.txt
          retention-days: 7

  release:
    name: Release project
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags')
    needs: [package]
    runs-on: ubuntu-latest
    steps:
      - name: Release to the public PyPI repository
        uses: ansys/actions/release-pypi-public@v4
        with:
          library-name: ${{ env.PACKAGE_NAME }}
          twine-username: "__token__"
          twine-token: ${{ secrets.PYPI_TOKEN }}

      - name: Release to GitHub
        uses: ansys/actions/release-github@v4
        with:
          library-name: ${{ env.PACKAGE_NAME }}
